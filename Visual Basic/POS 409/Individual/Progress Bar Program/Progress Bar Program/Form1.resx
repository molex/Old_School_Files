<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAZABkAAD/2wBDABALDA4MChAODQ4SERATGCgaGBYWGDEjJR0oOjM9PDkzODdA
        SFxOQERXRTc4UG1RV19iZ2hnPk1xeXBkeFxlZ2P/2wBDARESEhgVGC8aGi9jQjhCY2NjY2NjY2NjY2Nj
        Y2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2P/wAARCAFeAV4DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDmMUYzRS+1IsQDvS4o70vPrQISlo5o5oAPwpaOaOaYgo7UvbpS
        0AJRS4FGBTAQ0GnYzRt/OgBpoAp23JpMUCG8UU7BowaYDR6UU7aRSbTigBM0UYowfxoASjtRg0YoATtS
        0u0ntRtPpSAbSU7aaNtAxtGB607b37UYpAJgUYpcUYoAaRS0uDmkwc0AFFHNLQAlJTsUgHFIYlHalxxR
        jigBKKMdqMCgBKDjvSkfnQRQAooopR60AGBRxS9uaPamAlLilxR+FACcUuKXFFAhAKXFKBS0AIRxRjml
        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
</value>
  </data>
</root>